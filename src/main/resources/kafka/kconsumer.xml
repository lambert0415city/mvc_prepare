<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--单行读取配置文件-->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:kafka/kafkaconsumer.properties"/>

<bean id="consumerProperties" class="java.util.HashMap">
    <constructor-arg>
        <map>
            <!--Kafka服务地址 -->
            <entry key="bootstrap.servers" value="${kafka.bootstrap-servers}" />
            <!--Consumer的组ID，相同goup.id的consumer属于同一个组。 -->
            <entry key="group.id" value="${kafka.consumer.group-id}" />
            <!--如果此值设置为true，consumer会周期性的把当前消费的offset值保存到zookeeper。当consumer失败重启之后将会使用此值作为新开始消费的值。 -->
            <entry key="enable.auto.commit" value="${kafka.consumer.enable-auto-commit}" />
            <!--网络请求的socket超时时间。实际超时时间由max.fetch.wait + socket.timeout.ms 确定 -->
            <entry key="session.timeout.ms" value="${kafka.consumer.session.timeout} " />
            <entry key="auto.offset.reset" value="${kafka.auto.offset.reset}" />
            <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
            <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer" />
        </map>
    </constructor-arg>
</bean>

        <!--指定具体监听类的bean -->
<bean id="kafkaConsumerListener" class="com.cs.kafka.KafkaConsumerListener" />

        <!-- 创建consumerFactory bean -->
<bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
<constructor-arg>
    <ref bean="consumerProperties"/>
</constructor-arg>
</bean>

        <!-- 设定topic信息 -->
<bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
<constructor-arg value="${kafka.topic.name}"/>
<property name="messageListener" ref="kafkaConsumerListener"/>
</bean>

<bean id="messageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" init-method="doStart">
<constructor-arg ref="consumerFactory"/>
<constructor-arg ref="containerProperties"/>
</bean>

</beans>